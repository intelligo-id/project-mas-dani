{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "product-bundling-mas-dani.ipynb",
      "provenance": [],
      "collapsed_sections": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "# Import Data"
      ],
      "metadata": {
        "id": "OKVmWXrYrFsu"
      }
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "yBXD9YjlMr7q"
      },
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import pandas as pd\n",
        "import pylab as pl\n",
        "import numpy as np\n",
        "%matplotlib inline\n",
        "\n",
        "import seaborn as sns"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df = pd.read_csv('/content/drive/MyDrive/ngoding/freelance/masdani/Hochrechnungsreport_2018.csv')"
      ],
      "metadata": {
        "id": "CJy7YWOSYHPW"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 894
        },
        "id": "5XpdOXxbYPFu",
        "outputId": "a8e9c20a-edae-428b-d5ea-b003e4f6e987"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Departement</th>\n",
              "      <th>Amt</th>\n",
              "      <th>Debitor</th>\n",
              "      <th>DSTNr</th>\n",
              "      <th>Vetriebsweg</th>\n",
              "      <th>MWST</th>\n",
              "      <th>VTyp</th>\n",
              "      <th>VereinbarungNr</th>\n",
              "      <th>VertragsName</th>\n",
              "      <th>LeitungsKategorie</th>\n",
              "      <th>Marktleistungsgruppe</th>\n",
              "      <th>Marktleistung</th>\n",
              "      <th>MaterialNr</th>\n",
              "      <th>Material</th>\n",
              "      <th>PSPElement</th>\n",
              "      <th>MonthlyPrizePerUnit</th>\n",
              "      <th>UnitName</th>\n",
              "      <th>Periode</th>\n",
              "      <th>Amount</th>\n",
              "      <th>Verrechnungsbetrag</th>\n",
              "      <th>AbweichungMenge</th>\n",
              "      <th>AbweichungPreis</th>\n",
              "      <th>LineareHochrechnung</th>\n",
              "      <th>ExtrapolierteHochrechnung</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>BG</td>\n",
              "      <td>AB-BA</td>\n",
              "      <td>LVDR001117</td>\n",
              "      <td>109</td>\n",
              "      <td>KS</td>\n",
              "      <td>False</td>\n",
              "      <td>SLA</td>\n",
              "      <td>540000190</td>\n",
              "      <td>Applikationen betreiben BWL-SAP</td>\n",
              "      <td>Applikationen betreiben</td>\n",
              "      <td>Betriebswirtschaftliche Lösungen</td>\n",
              "      <td>BWL FI: Finanzwesen/Controlling</td>\n",
              "      <td>540003063</td>\n",
              "      <td>FIP Zähler: ML-User</td>\n",
              "      <td>KW01-00202.007.002</td>\n",
              "      <td>0.71</td>\n",
              "      <td>Stück</td>\n",
              "      <td>2021.01</td>\n",
              "      <td>30</td>\n",
              "      <td>21.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>255.6</td>\n",
              "      <td>255.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>BG</td>\n",
              "      <td>AB-BA</td>\n",
              "      <td>LVDR001117</td>\n",
              "      <td>109</td>\n",
              "      <td>KS</td>\n",
              "      <td>False</td>\n",
              "      <td>SLA</td>\n",
              "      <td>540000190</td>\n",
              "      <td>Applikationen betreiben BWL-SAP</td>\n",
              "      <td>Applikationen betreiben</td>\n",
              "      <td>Betriebswirtschaftliche Lösungen</td>\n",
              "      <td>BWL FI: Finanzwesen/Controlling</td>\n",
              "      <td>540003085</td>\n",
              "      <td>KLR Zähler: ML-User</td>\n",
              "      <td>KW01-00202.007.002</td>\n",
              "      <td>0.71</td>\n",
              "      <td>Stück</td>\n",
              "      <td>2021.01</td>\n",
              "      <td>3</td>\n",
              "      <td>2.13</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>25.56</td>\n",
              "      <td>25.56</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>BG</td>\n",
              "      <td>AB-BA</td>\n",
              "      <td>LVDR001117</td>\n",
              "      <td>109</td>\n",
              "      <td>KS</td>\n",
              "      <td>False</td>\n",
              "      <td>SLA</td>\n",
              "      <td>540000190</td>\n",
              "      <td>Applikationen betreiben BWL-SAP</td>\n",
              "      <td>Applikationen betreiben</td>\n",
              "      <td>Betriebswirtschaftliche Lösungen</td>\n",
              "      <td>BWL FI: Finanzwesen/Controlling</td>\n",
              "      <td>540003095</td>\n",
              "      <td>KWF T-Shirt: Medium</td>\n",
              "      <td>KW01-00202.007.002</td>\n",
              "      <td>100.33</td>\n",
              "      <td>Stück</td>\n",
              "      <td>2021.01</td>\n",
              "      <td>1</td>\n",
              "      <td>100.33</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1'203.96</td>\n",
              "      <td>1'203.96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>BG</td>\n",
              "      <td>AB-BA</td>\n",
              "      <td>LVDR001117</td>\n",
              "      <td>109</td>\n",
              "      <td>KS</td>\n",
              "      <td>False</td>\n",
              "      <td>SLA</td>\n",
              "      <td>540000190</td>\n",
              "      <td>Applikationen betreiben BWL-SAP</td>\n",
              "      <td>Applikationen betreiben</td>\n",
              "      <td>Betriebswirtschaftliche Lösungen</td>\n",
              "      <td>BWL FI: Finanzwesen/Controlling</td>\n",
              "      <td>540003096</td>\n",
              "      <td>KWF Zähler: ML-User</td>\n",
              "      <td>KW01-00202.007.002</td>\n",
              "      <td>0.71</td>\n",
              "      <td>Stück</td>\n",
              "      <td>2021.01</td>\n",
              "      <td>30</td>\n",
              "      <td>21.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>255.6</td>\n",
              "      <td>255.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>BG</td>\n",
              "      <td>AB-BA</td>\n",
              "      <td>LVDR001117</td>\n",
              "      <td>109</td>\n",
              "      <td>KS</td>\n",
              "      <td>False</td>\n",
              "      <td>SLA</td>\n",
              "      <td>540000190</td>\n",
              "      <td>Applikationen betreiben BWL-SAP</td>\n",
              "      <td>Applikationen betreiben</td>\n",
              "      <td>Betriebswirtschaftliche Lösungen</td>\n",
              "      <td>BWL FS: Fachsupport</td>\n",
              "      <td>540003199</td>\n",
              "      <td>FS_SAP Zähler: SAP-User</td>\n",
              "      <td>KW01-00202.007.007</td>\n",
              "      <td>0.35</td>\n",
              "      <td>Stück</td>\n",
              "      <td>2021.01</td>\n",
              "      <td>3</td>\n",
              "      <td>1.05</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>12.6</td>\n",
              "      <td>12.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>91750</th>\n",
              "      <td>WBF</td>\n",
              "      <td>ZIVI</td>\n",
              "      <td>LVDR001093</td>\n",
              "      <td>735</td>\n",
              "      <td>KS</td>\n",
              "      <td>False</td>\n",
              "      <td>SLA</td>\n",
              "      <td>540001245</td>\n",
              "      <td>Zuverlässig vernetzen</td>\n",
              "      <td>Zuverlässig vernetzen</td>\n",
              "      <td>Datenkommunikation</td>\n",
              "      <td>IP LAN</td>\n",
              "      <td>540002150</td>\n",
              "      <td>IP LAN Office Switch</td>\n",
              "      <td>KW01-00301.001.001</td>\n",
              "      <td>6</td>\n",
              "      <td># installierte LAN-Ports</td>\n",
              "      <td>2021.09</td>\n",
              "      <td>8</td>\n",
              "      <td>48</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>576</td>\n",
              "      <td>576</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>91751</th>\n",
              "      <td>WBF</td>\n",
              "      <td>ZIVI</td>\n",
              "      <td>LVDR001093</td>\n",
              "      <td>735</td>\n",
              "      <td>KS</td>\n",
              "      <td>False</td>\n",
              "      <td>SLA</td>\n",
              "      <td>540001245</td>\n",
              "      <td>Zuverlässig vernetzen</td>\n",
              "      <td>Zuverlässig vernetzen</td>\n",
              "      <td>Datenkommunikation</td>\n",
              "      <td>IP LAN</td>\n",
              "      <td>540000507</td>\n",
              "      <td>IP LAN Wirecenter Switch Standard</td>\n",
              "      <td>KW01-00301.001.001</td>\n",
              "      <td>6</td>\n",
              "      <td># installierte LAN-Ports</td>\n",
              "      <td>2021.09</td>\n",
              "      <td>512</td>\n",
              "      <td>3'072.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>36'864.00</td>\n",
              "      <td>36'864.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>91752</th>\n",
              "      <td>WBF</td>\n",
              "      <td>ZIVI</td>\n",
              "      <td>LVDR001093</td>\n",
              "      <td>735</td>\n",
              "      <td>KS</td>\n",
              "      <td>False</td>\n",
              "      <td>SLA</td>\n",
              "      <td>540001245</td>\n",
              "      <td>Zuverlässig vernetzen</td>\n",
              "      <td>Zuverlässig vernetzen</td>\n",
              "      <td>Datenkommunikation</td>\n",
              "      <td>IP WAN</td>\n",
              "      <td>540000661</td>\n",
              "      <td>IP WAN CIR 10 Mbit/s Silber</td>\n",
              "      <td>KW01-00301.001.002</td>\n",
              "      <td>1'800.00</td>\n",
              "      <td># SAP</td>\n",
              "      <td>2021.09</td>\n",
              "      <td>3</td>\n",
              "      <td>5'400.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>64'800.00</td>\n",
              "      <td>64'800.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>91753</th>\n",
              "      <td>WBF</td>\n",
              "      <td>ZIVI</td>\n",
              "      <td>LVDR001093</td>\n",
              "      <td>735</td>\n",
              "      <td>KS</td>\n",
              "      <td>False</td>\n",
              "      <td>SLA</td>\n",
              "      <td>540001245</td>\n",
              "      <td>Zuverlässig vernetzen</td>\n",
              "      <td>Zuverlässig vernetzen</td>\n",
              "      <td>Datenkommunikation</td>\n",
              "      <td>IP WAN</td>\n",
              "      <td>540000667</td>\n",
              "      <td>IP WAN CIR 50 Mbit/s Silber</td>\n",
              "      <td>KW01-00301.001.002</td>\n",
              "      <td>2'500.00</td>\n",
              "      <td># SAP</td>\n",
              "      <td>2021.09</td>\n",
              "      <td>5</td>\n",
              "      <td>12'500.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>150'000.00</td>\n",
              "      <td>150'000.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>91754</th>\n",
              "      <td>WBF</td>\n",
              "      <td>ZIVI</td>\n",
              "      <td>LVDR001093</td>\n",
              "      <td>735</td>\n",
              "      <td>KS</td>\n",
              "      <td>False</td>\n",
              "      <td>SLA</td>\n",
              "      <td>540001245</td>\n",
              "      <td>Zuverlässig vernetzen</td>\n",
              "      <td>Zuverlässig vernetzen</td>\n",
              "      <td>Datenkommunikation</td>\n",
              "      <td>WLAN-Service</td>\n",
              "      <td>540000514</td>\n",
              "      <td>WLAN Service Access-Point Indoor</td>\n",
              "      <td>KW01-00301.001.006</td>\n",
              "      <td>46</td>\n",
              "      <td># Access-Point</td>\n",
              "      <td>2021.09</td>\n",
              "      <td>22</td>\n",
              "      <td>1'012.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>12'144.00</td>\n",
              "      <td>12'144.00</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>91755 rows × 24 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "      Departement    Amt  ... LineareHochrechnung  ExtrapolierteHochrechnung\n",
              "0              BG  AB-BA  ...               255.6                      255.6\n",
              "1              BG  AB-BA  ...               25.56                      25.56\n",
              "2              BG  AB-BA  ...            1'203.96                   1'203.96\n",
              "3              BG  AB-BA  ...               255.6                      255.6\n",
              "4              BG  AB-BA  ...                12.6                       12.6\n",
              "...           ...    ...  ...                 ...                        ...\n",
              "91750         WBF   ZIVI  ...                 576                        576\n",
              "91751         WBF   ZIVI  ...           36'864.00                  36'864.00\n",
              "91752         WBF   ZIVI  ...           64'800.00                  64'800.00\n",
              "91753         WBF   ZIVI  ...          150'000.00                 150'000.00\n",
              "91754         WBF   ZIVI  ...           12'144.00                  12'144.00\n",
              "\n",
              "[91755 rows x 24 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "S04R1bzFYmsR",
        "outputId": "ca3736c9-3897-425c-a947-d871a74f2bb3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 91755 entries, 0 to 91754\n",
            "Data columns (total 24 columns):\n",
            " #   Column                     Non-Null Count  Dtype  \n",
            "---  ------                     --------------  -----  \n",
            " 0   Departement                91755 non-null  object \n",
            " 1   Amt                        91755 non-null  object \n",
            " 2   Debitor                    91755 non-null  object \n",
            " 3   DSTNr                      91755 non-null  int64  \n",
            " 4   Vetriebsweg                91755 non-null  object \n",
            " 5   MWST                       91755 non-null  bool   \n",
            " 6   VTyp                       91755 non-null  object \n",
            " 7   VereinbarungNr             91755 non-null  int64  \n",
            " 8   VertragsName               91755 non-null  object \n",
            " 9   LeitungsKategorie          91755 non-null  object \n",
            " 10  Marktleistungsgruppe       91755 non-null  object \n",
            " 11  Marktleistung              91755 non-null  object \n",
            " 12  MaterialNr                 91755 non-null  int64  \n",
            " 13  Material                   91755 non-null  object \n",
            " 14  PSPElement                 91755 non-null  object \n",
            " 15  MonthlyPrizePerUnit        91755 non-null  object \n",
            " 16  UnitName                   91755 non-null  object \n",
            " 17  Periode                    91755 non-null  float64\n",
            " 18  Amount                     91755 non-null  object \n",
            " 19  Verrechnungsbetrag         91755 non-null  object \n",
            " 20  AbweichungMenge            81560 non-null  object \n",
            " 21  AbweichungPreis            81560 non-null  object \n",
            " 22  LineareHochrechnung        91755 non-null  object \n",
            " 23  ExtrapolierteHochrechnung  91755 non-null  object \n",
            "dtypes: bool(1), float64(1), int64(3), object(19)\n",
            "memory usage: 16.2+ MB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df = df[['Marktleistung', 'Verrechnungsbetrag']]"
      ],
      "metadata": {
        "id": "B-S0fnSvYhBj"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "KE4kACfVYuzP",
        "outputId": "19533b6e-4a73-4dc8-c3b3-4311ab8e4a77"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Marktleistung</th>\n",
              "      <th>Verrechnungsbetrag</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>BWL FI: Finanzwesen/Controlling</td>\n",
              "      <td>21.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>BWL FI: Finanzwesen/Controlling</td>\n",
              "      <td>2.13</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>BWL FI: Finanzwesen/Controlling</td>\n",
              "      <td>100.33</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>BWL FI: Finanzwesen/Controlling</td>\n",
              "      <td>21.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>BWL FS: Fachsupport</td>\n",
              "      <td>1.05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>91750</th>\n",
              "      <td>IP LAN</td>\n",
              "      <td>48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>91751</th>\n",
              "      <td>IP LAN</td>\n",
              "      <td>3'072.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>91752</th>\n",
              "      <td>IP WAN</td>\n",
              "      <td>5'400.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>91753</th>\n",
              "      <td>IP WAN</td>\n",
              "      <td>12'500.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>91754</th>\n",
              "      <td>WLAN-Service</td>\n",
              "      <td>1'012.00</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>91755 rows × 2 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "                         Marktleistung Verrechnungsbetrag\n",
              "0      BWL FI: Finanzwesen/Controlling               21.3\n",
              "1      BWL FI: Finanzwesen/Controlling               2.13\n",
              "2      BWL FI: Finanzwesen/Controlling             100.33\n",
              "3      BWL FI: Finanzwesen/Controlling               21.3\n",
              "4                  BWL FS: Fachsupport               1.05\n",
              "...                                ...                ...\n",
              "91750                           IP LAN                 48\n",
              "91751                           IP LAN           3'072.00\n",
              "91752                           IP WAN           5'400.00\n",
              "91753                           IP WAN          12'500.00\n",
              "91754                     WLAN-Service           1'012.00\n",
              "\n",
              "[91755 rows x 2 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 31
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df['Marktleistung'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "VnuCxUtOZnyK",
        "outputId": "fb9a9ea5-00a9-4068-b813-7496cd57d985"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Arbeitsplatz Software Schale 2     10809\n",
              "Betrieb Fachanwendung               5202\n",
              "BWL FI: Finanzwesen/Controlling     3834\n",
              "Arbeitsplatz Software Schale 3      3249\n",
              "Mobile Abo Voice und Data           2934\n",
              "                                   ...  \n",
              "Managed Proxy Service                 18\n",
              "ePortal                               18\n",
              "VDI-Service                           18\n",
              "File Transfer Service                 18\n",
              "Speziallösung                         18\n",
              "Name: Marktleistung, Length: 114, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 32
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xlAw7aGEaLYl",
        "outputId": "c23b6f8e-a913-44ec-860e-b367e9bfdb9d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 91755 entries, 0 to 91754\n",
            "Data columns (total 2 columns):\n",
            " #   Column              Non-Null Count  Dtype \n",
            "---  ------              --------------  ----- \n",
            " 0   Marktleistung       91755 non-null  object\n",
            " 1   Verrechnungsbetrag  91755 non-null  object\n",
            "dtypes: object(2)\n",
            "memory usage: 1.4+ MB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df['Verrechnungsbetrag'] = df['Verrechnungsbetrag'].str.replace(r'\\D', '')\n",
        "df['Verrechnungsbetrag'] = df['Verrechnungsbetrag'].astype(float)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "QND8Mq2gaN93",
        "outputId": "900129a4-05b2-4d92-f28b-5ed414e3b680"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:1: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  \"\"\"Entry point for launching an IPython kernel.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df['Marktleistung'] = df['Marktleistung'].astype('category')\n",
        "df['Marktleistung_num'] = df['Marktleistung'].cat.codes"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "m8CAyyv4Zt3R",
        "outputId": "968e420e-5d0b-447e-d360-2734afbfea4e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:1: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  \"\"\"Entry point for launching an IPython kernel.\n",
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:2: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "gzjdrVgiaHBC",
        "outputId": "9ff7eeca-8719-4784-e35b-f4b442cac099"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Marktleistung</th>\n",
              "      <th>Verrechnungsbetrag</th>\n",
              "      <th>Marktleistung_num</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>BWL FI: Finanzwesen/Controlling</td>\n",
              "      <td>213.0</td>\n",
              "      <td>8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>BWL FI: Finanzwesen/Controlling</td>\n",
              "      <td>213.0</td>\n",
              "      <td>8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>BWL FI: Finanzwesen/Controlling</td>\n",
              "      <td>10033.0</td>\n",
              "      <td>8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>BWL FI: Finanzwesen/Controlling</td>\n",
              "      <td>213.0</td>\n",
              "      <td>8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>BWL FS: Fachsupport</td>\n",
              "      <td>105.0</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>91750</th>\n",
              "      <td>IP LAN</td>\n",
              "      <td>48.0</td>\n",
              "      <td>37</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>91751</th>\n",
              "      <td>IP LAN</td>\n",
              "      <td>307200.0</td>\n",
              "      <td>37</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>91752</th>\n",
              "      <td>IP WAN</td>\n",
              "      <td>540000.0</td>\n",
              "      <td>38</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>91753</th>\n",
              "      <td>IP WAN</td>\n",
              "      <td>1250000.0</td>\n",
              "      <td>38</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>91754</th>\n",
              "      <td>WLAN-Service</td>\n",
              "      <td>101200.0</td>\n",
              "      <td>98</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>91755 rows × 3 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "                         Marktleistung  Verrechnungsbetrag  Marktleistung_num\n",
              "0      BWL FI: Finanzwesen/Controlling               213.0                  8\n",
              "1      BWL FI: Finanzwesen/Controlling               213.0                  8\n",
              "2      BWL FI: Finanzwesen/Controlling             10033.0                  8\n",
              "3      BWL FI: Finanzwesen/Controlling               213.0                  8\n",
              "4                  BWL FS: Fachsupport               105.0                  9\n",
              "...                                ...                 ...                ...\n",
              "91750                           IP LAN                48.0                 37\n",
              "91751                           IP LAN            307200.0                 37\n",
              "91752                           IP WAN            540000.0                 38\n",
              "91753                           IP WAN           1250000.0                 38\n",
              "91754                     WLAN-Service            101200.0                 98\n",
              "\n",
              "[91755 rows x 3 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df['Marktleistung_num'].corr(df['Verrechnungsbetrag'])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "r3p432HSZcao",
        "outputId": "2ce81ca2-51f7-43f8-a993-f3de7b2f67ca"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "-0.006045351133844474"
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "corr_rank = df.corr()\n",
        "corr_rank[\"Marktleistung_num\"].sort_values(ascending=False)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "NBso_HOUYzC8",
        "outputId": "1fc21b95-bc3e-4828-cab2-7545c6978e33"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Marktleistung_num     1.000000\n",
              "Verrechnungsbetrag   -0.006045\n",
              "Name: Marktleistung_num, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df = df.rename(columns={\"Marktleistung\": \"Item\", \"Verrechnungsbetrag\": \"Transaction\"})"
      ],
      "metadata": {
        "id": "2GYr4QYsbdKg"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data = df"
      ],
      "metadata": {
        "id": "YLxWdoBuc6iy"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# corr"
      ],
      "metadata": {
        "id": "IOOb0xNRc7Ns"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import sys\n",
        "import matplotlib.pyplot as plt\n",
        "from itertools import combinations, groupby\n",
        "from collections import Counter\n",
        "from IPython.display import display"
      ],
      "metadata": {
        "id": "-p-cKD5Pc9U1"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "items = data['Item'].value_counts().index\n",
        "item_frequency = data['Item'].value_counts().values\n",
        "plt.figure(figsize=(35,6))\n",
        "plt.xlabel('Items', fontsize='15')\n",
        "plt.ylabel('Frequency', fontsize='15')\n",
        "plt.title('Top 10 Selling Items', fontsize='15')\n",
        "plt.bar(items[:10],item_frequency[:10], width = 0.7, color=\"gray\",linewidth=0.4)\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 292
        },
        "id": "MqSorxWoc_tA",
        "outputId": "3f9f9269-2340-4f2a-c7fe-b6c522d9eed7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 2520x432 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Returns frequency counts for items and item pairs\n",
        "def freq(iterable):\n",
        "    if type(iterable) == pd.core.series.Series:\n",
        "        return iterable.value_counts().rename(\"freq\")\n",
        "    else: \n",
        "        return pd.Series(Counter(iterable)).rename(\"freq\")\n",
        "\n",
        "    \n",
        "# Returns number of unique orders\n",
        "def order_count(order_item):\n",
        "    return len(set(order_item.index))\n",
        "\n",
        "\n",
        "# Returns generator that yields item pairs, one at a time\n",
        "def get_item_pairs(order_item):\n",
        "    order_item = order_item.reset_index().to_numpy()\n",
        "    for order_id, order_object in groupby(order_item, lambda x: x[0]):\n",
        "        item_list = [item[1] for item in order_object]\n",
        "              \n",
        "        for item_pair in combinations(item_list, 2):\n",
        "            yield item_pair\n",
        "            \n",
        "\n",
        "# Returns frequency and support associated with item\n",
        "def merge_item_stats(item_pairs, item_stats):\n",
        "    return (item_pairs\n",
        "                .merge(item_stats.rename(columns={'freq': 'freqA', 'support': 'supportA'}), left_on='item_A', right_index=True)\n",
        "                .merge(item_stats.rename(columns={'freq': 'freqB', 'support': 'supportB'}), left_on='item_B', right_index=True))\n",
        "\n",
        "\n",
        "# Returns name associated with item\n",
        "def merge_item_name(rules, item_name):\n",
        "    columns = ['itemA','itemB','freqAB','supportAB','freqA','supportA','freqB','supportB', \n",
        "               'confidenceAtoB','confidenceBtoA','lift']\n",
        "    rules = (rules\n",
        "                .merge(item_name.rename(columns={'item_name': 'itemA'}), left_on='item_A', right_on='item_id')\n",
        "                .merge(item_name.rename(columns={'item_name': 'itemB'}), left_on='item_B', right_on='item_id'))\n",
        "    return rules[columns]"
      ],
      "metadata": {
        "id": "yrTMJYdrdl_L"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def association_rules(order_item, min_support):\n",
        "\n",
        "    print(\"Starting order_item: {:22d}\".format(len(order_item)))\n",
        "\n",
        "\n",
        "    # Calculate item frequency and support\n",
        "    item_stats             = freq(order_item).to_frame(\"freq\")\n",
        "    item_stats['support']  = item_stats['freq'] / order_count(order_item)\n",
        "\n",
        "\n",
        "    # Filter from order_item items below min support \n",
        "    qualifying_items       = item_stats[item_stats['support'] >= min_support].index\n",
        "    order_item             = order_item[order_item.isin(qualifying_items)]\n",
        "\n",
        "    print(\"Items with support >= {}: {:15d}\".format(min_support, len(qualifying_items)))\n",
        "    print(\"Remaining order_item: {:21d}\".format(len(order_item)))\n",
        "\n",
        "\n",
        "    # Filter from order_item orders with less than 2 items\n",
        "    order_size             = freq(order_item.index)\n",
        "    qualifying_orders      = order_size[order_size >= 2].index\n",
        "    order_item             = order_item[order_item.index.isin(qualifying_orders)]\n",
        "\n",
        "    print(\"Remaining orders with 2+ items: {:11d}\".format(len(qualifying_orders)))\n",
        "    print(\"Remaining order_item: {:21d}\".format(len(order_item)))\n",
        "\n",
        "\n",
        "    # Recalculate item frequency and support\n",
        "    item_stats             = freq(order_item).to_frame(\"freq\")\n",
        "    item_stats['support']  = item_stats['freq'] / order_count(order_item)\n",
        "\n",
        "\n",
        "    # Get item pairs generator\n",
        "    item_pair_gen          = get_item_pairs(order_item)\n",
        "\n",
        "\n",
        "    # Calculate item pair frequency and support\n",
        "    item_pairs              = freq(item_pair_gen).to_frame(\"freqAB\")\n",
        "    item_pairs['supportAB'] = item_pairs['freqAB'] / len(qualifying_orders)\n",
        "\n",
        "    print(\"Item pairs: {:31d}\".format(len(item_pairs)))\n",
        "\n",
        "\n",
        "    # Filter from item_pairs those below min support\n",
        "    item_pairs              = item_pairs[item_pairs['supportAB'] >= min_support]\n",
        "\n",
        "    print(\"Item pairs with support >= {}: {:10d}\\n\".format(min_support, len(item_pairs)))\n",
        "\n",
        "\n",
        "    # Create table of association rules and compute relevant metrics\n",
        "    item_pairs = item_pairs.reset_index().rename(columns={'level_0': 'item_A', 'level_1': 'item_B'})\n",
        "    item_pairs = merge_item_stats(item_pairs, item_stats)\n",
        "    \n",
        "    item_pairs['confidenceAtoB'] = item_pairs['supportAB'] / item_pairs['supportA']\n",
        "    item_pairs['confidenceBtoA'] = item_pairs['supportAB'] / item_pairs['supportB']\n",
        "    item_pairs['lift']           = item_pairs['supportAB'] / (item_pairs['supportA'] * item_pairs['supportB'])\n",
        "    \n",
        "    \n",
        "    # Return association rules sorted by lift in descending order\n",
        "    return item_pairs.sort_values('lift', ascending=False)"
      ],
      "metadata": {
        "id": "tX_9l5F3dqJ6"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Data Transformation\n",
        "#Transforming original dataframe into the expected format: Series\n",
        "orders_series = data.set_index('Transaction')['Item']\n",
        "#Display series as dataframe for cosmetic purposes\n",
        "display(pd.DataFrame(orders_series.head(10))) "
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 394
        },
        "id": "FKP0lUc4dvCC",
        "outputId": "c124861d-3a74-4861-81be-295be20d161a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Item</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Transaction</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>213.0</th>\n",
              "      <td>BWL FI: Finanzwesen/Controlling</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>213.0</th>\n",
              "      <td>BWL FI: Finanzwesen/Controlling</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10033.0</th>\n",
              "      <td>BWL FI: Finanzwesen/Controlling</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>213.0</th>\n",
              "      <td>BWL FI: Finanzwesen/Controlling</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>105.0</th>\n",
              "      <td>BWL FS: Fachsupport</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5.0</th>\n",
              "      <td>BWL HCM: Human Capital Mgmt</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3195.0</th>\n",
              "      <td>BWL HCM: Human Capital Mgmt</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2866.0</th>\n",
              "      <td>BWL HCM: Human Capital Mgmt</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3905.0</th>\n",
              "      <td>BWL HCM: Human Capital Mgmt</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>284.0</th>\n",
              "      <td>BWL HCM: Human Capital Mgmt</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                                        Item\n",
              "Transaction                                 \n",
              "213.0        BWL FI: Finanzwesen/Controlling\n",
              "213.0        BWL FI: Finanzwesen/Controlling\n",
              "10033.0      BWL FI: Finanzwesen/Controlling\n",
              "213.0        BWL FI: Finanzwesen/Controlling\n",
              "105.0                    BWL FS: Fachsupport\n",
              "5.0              BWL HCM: Human Capital Mgmt\n",
              "3195.0           BWL HCM: Human Capital Mgmt\n",
              "2866.0           BWL HCM: Human Capital Mgmt\n",
              "3905.0           BWL HCM: Human Capital Mgmt\n",
              "284.0            BWL HCM: Human Capital Mgmt"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Data mining\n",
        "rules = association_rules(orders_series, 0.01)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HjcEzJVJdxzt",
        "outputId": "bbdff8dd-3eeb-47a7-9cfb-c717923ee3ab"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Starting order_item:                  91755\n",
            "Items with support >= 0.01:              83\n",
            "Remaining order_item:                 90009\n",
            "Remaining orders with 2+ items:        5302\n",
            "Remaining order_item:                 83563\n",
            "Item pairs:                             982\n",
            "Item pairs with support >= 0.01:        112\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "display(rules.sort_values('confidenceBtoA', ascending=False).head(10))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 363
        },
        "id": "M26gis8VeOE6",
        "outputId": "ae9341ff-1a33-4ae7-eca6-948396972487"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>item_A</th>\n",
              "      <th>item_B</th>\n",
              "      <th>freqAB</th>\n",
              "      <th>supportAB</th>\n",
              "      <th>freqA</th>\n",
              "      <th>supportA</th>\n",
              "      <th>freqB</th>\n",
              "      <th>supportB</th>\n",
              "      <th>confidenceAtoB</th>\n",
              "      <th>confidenceBtoA</th>\n",
              "      <th>lift</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Arbeitsplatz Software Schale 3</td>\n",
              "      <td>Arbeitsplatz Software Schale 3</td>\n",
              "      <td>2590</td>\n",
              "      <td>0.488495</td>\n",
              "      <td>2949</td>\n",
              "      <td>0.556205</td>\n",
              "      <td>2949</td>\n",
              "      <td>0.556205</td>\n",
              "      <td>0.878264</td>\n",
              "      <td>0.878264</td>\n",
              "      <td>1.579028</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>102</th>\n",
              "      <td>Arbeitsplatz Software Schale 2</td>\n",
              "      <td>Internet</td>\n",
              "      <td>600</td>\n",
              "      <td>0.113165</td>\n",
              "      <td>10329</td>\n",
              "      <td>1.948133</td>\n",
              "      <td>1189</td>\n",
              "      <td>0.224255</td>\n",
              "      <td>0.058089</td>\n",
              "      <td>0.504626</td>\n",
              "      <td>0.259030</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>BWL SAP-Analytics (non SAP-Data)</td>\n",
              "      <td>BWL SAP-Analytics (non SAP-Data)</td>\n",
              "      <td>144</td>\n",
              "      <td>0.027160</td>\n",
              "      <td>315</td>\n",
              "      <td>0.059412</td>\n",
              "      <td>315</td>\n",
              "      <td>0.059412</td>\n",
              "      <td>0.457143</td>\n",
              "      <td>0.457143</td>\n",
              "      <td>7.694512</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Software Schale 3a</td>\n",
              "      <td>Software Schale 3a</td>\n",
              "      <td>585</td>\n",
              "      <td>0.110336</td>\n",
              "      <td>1386</td>\n",
              "      <td>0.261411</td>\n",
              "      <td>1386</td>\n",
              "      <td>0.261411</td>\n",
              "      <td>0.422078</td>\n",
              "      <td>0.422078</td>\n",
              "      <td>1.614616</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Secure Messaging Extern</td>\n",
              "      <td>Arbeitsplatz Software Schale 3</td>\n",
              "      <td>1111</td>\n",
              "      <td>0.209544</td>\n",
              "      <td>1426</td>\n",
              "      <td>0.268955</td>\n",
              "      <td>2949</td>\n",
              "      <td>0.556205</td>\n",
              "      <td>0.779102</td>\n",
              "      <td>0.376738</td>\n",
              "      <td>1.400746</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>101</th>\n",
              "      <td>Arbeitsplatz Software Schale 2</td>\n",
              "      <td>Software Schale 3a</td>\n",
              "      <td>426</td>\n",
              "      <td>0.080347</td>\n",
              "      <td>10329</td>\n",
              "      <td>1.948133</td>\n",
              "      <td>1386</td>\n",
              "      <td>0.261411</td>\n",
              "      <td>0.041243</td>\n",
              "      <td>0.307359</td>\n",
              "      <td>0.157771</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Secure Messaging Extern</td>\n",
              "      <td>Secure Messaging Extern</td>\n",
              "      <td>353</td>\n",
              "      <td>0.066579</td>\n",
              "      <td>1426</td>\n",
              "      <td>0.268955</td>\n",
              "      <td>1426</td>\n",
              "      <td>0.268955</td>\n",
              "      <td>0.247546</td>\n",
              "      <td>0.247546</td>\n",
              "      <td>0.920397</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Arbeitsplatz Software Schale 2</td>\n",
              "      <td>Arbeitsplatz Software Schale 2</td>\n",
              "      <td>2102</td>\n",
              "      <td>0.396454</td>\n",
              "      <td>10329</td>\n",
              "      <td>1.948133</td>\n",
              "      <td>10329</td>\n",
              "      <td>1.948133</td>\n",
              "      <td>0.203505</td>\n",
              "      <td>0.203505</td>\n",
              "      <td>0.104461</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>111</th>\n",
              "      <td>Arbeitsplatz Software Schale 2</td>\n",
              "      <td>RAS-Wartung</td>\n",
              "      <td>57</td>\n",
              "      <td>0.010751</td>\n",
              "      <td>10329</td>\n",
              "      <td>1.948133</td>\n",
              "      <td>283</td>\n",
              "      <td>0.053376</td>\n",
              "      <td>0.005518</td>\n",
              "      <td>0.201413</td>\n",
              "      <td>0.103388</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>Mobile Abo Voice und Data</td>\n",
              "      <td>Mobile Nutzung</td>\n",
              "      <td>121</td>\n",
              "      <td>0.022822</td>\n",
              "      <td>2779</td>\n",
              "      <td>0.524142</td>\n",
              "      <td>601</td>\n",
              "      <td>0.113353</td>\n",
              "      <td>0.043541</td>\n",
              "      <td>0.201331</td>\n",
              "      <td>0.384116</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                               item_A  ...      lift\n",
              "11     Arbeitsplatz Software Schale 3  ...  1.579028\n",
              "102    Arbeitsplatz Software Schale 2  ...  0.259030\n",
              "12   BWL SAP-Analytics (non SAP-Data)  ...  7.694512\n",
              "7                  Software Schale 3a  ...  1.614616\n",
              "14            Secure Messaging Extern  ...  1.400746\n",
              "101    Arbeitsplatz Software Schale 2  ...  0.157771\n",
              "9             Secure Messaging Extern  ...  0.920397\n",
              "2      Arbeitsplatz Software Schale 2  ...  0.104461\n",
              "111    Arbeitsplatz Software Schale 2  ...  0.103388\n",
              "23          Mobile Abo Voice und Data  ...  0.384116\n",
              "\n",
              "[10 rows x 11 columns]"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rules"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "SLhIG_ozeXuD",
        "outputId": "ee96153b-1b6e-4025-a464-5ac7a0b7005e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>item_A</th>\n",
              "      <th>item_B</th>\n",
              "      <th>freqAB</th>\n",
              "      <th>supportAB</th>\n",
              "      <th>freqA</th>\n",
              "      <th>supportA</th>\n",
              "      <th>freqB</th>\n",
              "      <th>supportB</th>\n",
              "      <th>confidenceAtoB</th>\n",
              "      <th>confidenceBtoA</th>\n",
              "      <th>lift</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>BWL SAP-Analytics (non SAP-Data)</td>\n",
              "      <td>BWL SAP-Analytics (non SAP-Data)</td>\n",
              "      <td>144</td>\n",
              "      <td>0.027160</td>\n",
              "      <td>315</td>\n",
              "      <td>0.059412</td>\n",
              "      <td>315</td>\n",
              "      <td>0.059412</td>\n",
              "      <td>0.457143</td>\n",
              "      <td>0.457143</td>\n",
              "      <td>7.694512</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>Digital Asset Management SD</td>\n",
              "      <td>Digital Asset Management SD</td>\n",
              "      <td>84</td>\n",
              "      <td>0.015843</td>\n",
              "      <td>495</td>\n",
              "      <td>0.093361</td>\n",
              "      <td>495</td>\n",
              "      <td>0.093361</td>\n",
              "      <td>0.169697</td>\n",
              "      <td>0.169697</td>\n",
              "      <td>1.817643</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Software Schale 3a</td>\n",
              "      <td>Software Schale 3a</td>\n",
              "      <td>585</td>\n",
              "      <td>0.110336</td>\n",
              "      <td>1386</td>\n",
              "      <td>0.261411</td>\n",
              "      <td>1386</td>\n",
              "      <td>0.261411</td>\n",
              "      <td>0.422078</td>\n",
              "      <td>0.422078</td>\n",
              "      <td>1.614616</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Arbeitsplatz Software Schale 3</td>\n",
              "      <td>Arbeitsplatz Software Schale 3</td>\n",
              "      <td>2590</td>\n",
              "      <td>0.488495</td>\n",
              "      <td>2949</td>\n",
              "      <td>0.556205</td>\n",
              "      <td>2949</td>\n",
              "      <td>0.556205</td>\n",
              "      <td>0.878264</td>\n",
              "      <td>0.878264</td>\n",
              "      <td>1.579028</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Secure Messaging Extern</td>\n",
              "      <td>Arbeitsplatz Software Schale 3</td>\n",
              "      <td>1111</td>\n",
              "      <td>0.209544</td>\n",
              "      <td>1426</td>\n",
              "      <td>0.268955</td>\n",
              "      <td>2949</td>\n",
              "      <td>0.556205</td>\n",
              "      <td>0.779102</td>\n",
              "      <td>0.376738</td>\n",
              "      <td>1.400746</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100</th>\n",
              "      <td>Arbeitsplatz Software Schale 2</td>\n",
              "      <td>Arbeitsplatz Software Schale 3</td>\n",
              "      <td>275</td>\n",
              "      <td>0.051867</td>\n",
              "      <td>10329</td>\n",
              "      <td>1.948133</td>\n",
              "      <td>2949</td>\n",
              "      <td>0.556205</td>\n",
              "      <td>0.026624</td>\n",
              "      <td>0.093252</td>\n",
              "      <td>0.047867</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Arbeitsplatz Software Schale 2</td>\n",
              "      <td>Secure Messaging Extern</td>\n",
              "      <td>126</td>\n",
              "      <td>0.023765</td>\n",
              "      <td>10329</td>\n",
              "      <td>1.948133</td>\n",
              "      <td>1426</td>\n",
              "      <td>0.268955</td>\n",
              "      <td>0.012199</td>\n",
              "      <td>0.088359</td>\n",
              "      <td>0.045356</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>106</th>\n",
              "      <td>Druckgeräte</td>\n",
              "      <td>Arbeitsplatz Software Schale 2</td>\n",
              "      <td>57</td>\n",
              "      <td>0.010751</td>\n",
              "      <td>673</td>\n",
              "      <td>0.126933</td>\n",
              "      <td>10329</td>\n",
              "      <td>1.948133</td>\n",
              "      <td>0.084695</td>\n",
              "      <td>0.005518</td>\n",
              "      <td>0.043475</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>BWL FI: Finanzwesen/Controlling</td>\n",
              "      <td>BWL FI: Finanzwesen/Controlling</td>\n",
              "      <td>117</td>\n",
              "      <td>0.022067</td>\n",
              "      <td>3834</td>\n",
              "      <td>0.723123</td>\n",
              "      <td>3834</td>\n",
              "      <td>0.723123</td>\n",
              "      <td>0.030516</td>\n",
              "      <td>0.030516</td>\n",
              "      <td>0.042201</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>90</th>\n",
              "      <td>Mobile Abo Voice und Data</td>\n",
              "      <td>Arbeitsplatz Software Schale 3</td>\n",
              "      <td>64</td>\n",
              "      <td>0.012071</td>\n",
              "      <td>2779</td>\n",
              "      <td>0.524142</td>\n",
              "      <td>2949</td>\n",
              "      <td>0.556205</td>\n",
              "      <td>0.023030</td>\n",
              "      <td>0.021702</td>\n",
              "      <td>0.041405</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>112 rows × 11 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "                               item_A  ...      lift\n",
              "12   BWL SAP-Analytics (non SAP-Data)  ...  7.694512\n",
              "24        Digital Asset Management SD  ...  1.817643\n",
              "7                  Software Schale 3a  ...  1.614616\n",
              "11     Arbeitsplatz Software Schale 3  ...  1.579028\n",
              "14            Secure Messaging Extern  ...  1.400746\n",
              "..                                ...  ...       ...\n",
              "100    Arbeitsplatz Software Schale 2  ...  0.047867\n",
              "18     Arbeitsplatz Software Schale 2  ...  0.045356\n",
              "106                       Druckgeräte  ...  0.043475\n",
              "0     BWL FI: Finanzwesen/Controlling  ...  0.042201\n",
              "90          Mobile Abo Voice und Data  ...  0.041405\n",
              "\n",
              "[112 rows x 11 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rules.to_csv('/content/drive/MyDrive/ngoding/freelance/masdani/corrv1.csv', index=False)"
      ],
      "metadata": {
        "id": "u54o298OLbKE"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Concat data"
      ],
      "metadata": {
        "id": "oPBIG5i7cBOq"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd"
      ],
      "metadata": {
        "id": "BluCpHdzcDMO"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df2018 = pd.read_csv('/content/drive/MyDrive/ngoding/freelance/masdani/Hochrechnungsreport_2018.csv')\n",
        "df2019 = pd.read_excel('/content/drive/MyDrive/ngoding/freelance/masdani/Hochrechnungsreport_2019.xlsx')\n",
        "df2020 = pd.read_csv('/content/drive/MyDrive/ngoding/freelance/masdani/Hochrechnungsreport_2020.csv')\n",
        "df2021 = pd.read_csv('/content/drive/MyDrive/ngoding/freelance/masdani/Hochrechnungsreport_2021.csv')"
      ],
      "metadata": {
        "id": "tozSu9vtcKH8"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df2018.head(1)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 135
        },
        "id": "TsapYKdNcWKS",
        "outputId": "9fa19c47-dcab-4957-f5e2-5f07a7ba2b72"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Departement</th>\n",
              "      <th>Amt</th>\n",
              "      <th>Debitor</th>\n",
              "      <th>DSTNr</th>\n",
              "      <th>Vetriebsweg</th>\n",
              "      <th>MWST</th>\n",
              "      <th>VTyp</th>\n",
              "      <th>VereinbarungNr</th>\n",
              "      <th>VertragsName</th>\n",
              "      <th>LeitungsKategorie</th>\n",
              "      <th>Marktleistungsgruppe</th>\n",
              "      <th>Marktleistung</th>\n",
              "      <th>MaterialNr</th>\n",
              "      <th>Material</th>\n",
              "      <th>PSPElement</th>\n",
              "      <th>MonthlyPrizePerUnit</th>\n",
              "      <th>UnitName</th>\n",
              "      <th>Periode</th>\n",
              "      <th>Amount</th>\n",
              "      <th>Verrechnungsbetrag</th>\n",
              "      <th>AbweichungMenge</th>\n",
              "      <th>AbweichungPreis</th>\n",
              "      <th>LineareHochrechnung</th>\n",
              "      <th>ExtrapolierteHochrechnung</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>BG</td>\n",
              "      <td>AB-BA</td>\n",
              "      <td>LVDR001117</td>\n",
              "      <td>109</td>\n",
              "      <td>KS</td>\n",
              "      <td>False</td>\n",
              "      <td>SLA</td>\n",
              "      <td>540000190</td>\n",
              "      <td>Applikationen betreiben BWL-SAP</td>\n",
              "      <td>Applikationen betreiben</td>\n",
              "      <td>Betriebswirtschaftliche Lösungen</td>\n",
              "      <td>BWL FI: Finanzwesen/Controlling</td>\n",
              "      <td>540003063</td>\n",
              "      <td>FIP Zähler: ML-User</td>\n",
              "      <td>KW01-00202.007.002</td>\n",
              "      <td>0.71</td>\n",
              "      <td>Stück</td>\n",
              "      <td>2021.01</td>\n",
              "      <td>30</td>\n",
              "      <td>21.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>255.6</td>\n",
              "      <td>255.6</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "  Departement    Amt  ... LineareHochrechnung  ExtrapolierteHochrechnung\n",
              "0          BG  AB-BA  ...               255.6                      255.6\n",
              "\n",
              "[1 rows x 24 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df2019.head(1)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 205
        },
        "id": "KJGMoNhXchUT",
        "outputId": "e8d7a0af-9ea4-4918-f322-5a3d29dae489"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Departement</th>\n",
              "      <th>Amt</th>\n",
              "      <th>Debitor</th>\n",
              "      <th>DSTNr</th>\n",
              "      <th>Vertriebsweg</th>\n",
              "      <th>MWST</th>\n",
              "      <th>V-Typ</th>\n",
              "      <th>Vereinbarungs-Nr</th>\n",
              "      <th>Vertragstext</th>\n",
              "      <th>Leistungskategorie</th>\n",
              "      <th>Marktleistungsgruppe</th>\n",
              "      <th>Marktleistung</th>\n",
              "      <th>Material-Nr</th>\n",
              "      <th>Material</th>\n",
              "      <th>PSP-Nr</th>\n",
              "      <th>Aktueller Preis pro Monat</th>\n",
              "      <th>Einheit</th>\n",
              "      <th>Periode</th>\n",
              "      <th>Verrechnungsmenge</th>\n",
              "      <th>Verrechnungsbetrag</th>\n",
              "      <th>Abweichung Menge zu Vormonat</th>\n",
              "      <th>Abweichung Betrag zu Vormonat</th>\n",
              "      <th>Lineare Hochrechnung\\nEnde Jahr</th>\n",
              "      <th>Extrapolierte Hochrechnung Ende Jahr</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>BG</td>\n",
              "      <td>AB-BA</td>\n",
              "      <td>LVDR001117</td>\n",
              "      <td>109</td>\n",
              "      <td>KS</td>\n",
              "      <td>False</td>\n",
              "      <td>SLA</td>\n",
              "      <td>540000186</td>\n",
              "      <td>Meine Berechtigungen und Zugänge</td>\n",
              "      <td>Meine Berechtigungen und Zugänge</td>\n",
              "      <td>Basisdienste Büroautomation</td>\n",
              "      <td>Account</td>\n",
              "      <td>540002631</td>\n",
              "      <td>Account, Mailbox, Userhome exkl. Support</td>\n",
              "      <td>KW01-00105.002.009</td>\n",
              "      <td>26.0</td>\n",
              "      <td># Domain Accounts</td>\n",
              "      <td>2019.01</td>\n",
              "      <td>4</td>\n",
              "      <td>104.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1248.0</td>\n",
              "      <td>1248.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "  Departement  ... Extrapolierte Hochrechnung Ende Jahr\n",
              "0          BG  ...                               1248.0\n",
              "\n",
              "[1 rows x 24 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df2020.head(1)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 135
        },
        "id": "lcjv-K2Yci7n",
        "outputId": "9605403d-87e2-4ee9-a4aa-7ee20146f51b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Departement</th>\n",
              "      <th>Amt</th>\n",
              "      <th>Debitor</th>\n",
              "      <th>DSTNr</th>\n",
              "      <th>Vetriebsweg</th>\n",
              "      <th>MWST</th>\n",
              "      <th>VTyp</th>\n",
              "      <th>VereinbarungNr</th>\n",
              "      <th>VertragsName</th>\n",
              "      <th>LeitungsKategorie</th>\n",
              "      <th>Marktleistungsgruppe</th>\n",
              "      <th>Marktleistung</th>\n",
              "      <th>MaterialNr</th>\n",
              "      <th>Material</th>\n",
              "      <th>PSPElement</th>\n",
              "      <th>MonthlyPrizePerUnit</th>\n",
              "      <th>UnitName</th>\n",
              "      <th>Periode</th>\n",
              "      <th>Amount</th>\n",
              "      <th>Verrechnungsbetrag</th>\n",
              "      <th>AbweichungMenge</th>\n",
              "      <th>AbweichungPreis</th>\n",
              "      <th>LineareHochrechnung</th>\n",
              "      <th>ExtrapolierteHochrechnung</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>BG</td>\n",
              "      <td>AB-BA</td>\n",
              "      <td>LVDR001117</td>\n",
              "      <td>109</td>\n",
              "      <td>KS</td>\n",
              "      <td>False</td>\n",
              "      <td>SLA</td>\n",
              "      <td>540000190</td>\n",
              "      <td>Applikationen betreiben BWL-SAP</td>\n",
              "      <td>Applikationen betreiben</td>\n",
              "      <td>Betriebwirtschaftliche Lösungen</td>\n",
              "      <td>BWL FI: Finanzwesen/Controlling</td>\n",
              "      <td>540003063</td>\n",
              "      <td>FIP Zähler: ML-User</td>\n",
              "      <td>KW01-00202.007.002</td>\n",
              "      <td>0.71</td>\n",
              "      <td>Stück</td>\n",
              "      <td>2020.01</td>\n",
              "      <td>29</td>\n",
              "      <td>20.59</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>247.08</td>\n",
              "      <td>247.08</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "  Departement    Amt  ... LineareHochrechnung  ExtrapolierteHochrechnung\n",
              "0          BG  AB-BA  ...              247.08                     247.08\n",
              "\n",
              "[1 rows x 24 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df2021.head(1)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 135
        },
        "id": "vP16MRDscj5t",
        "outputId": "d71f1d6d-3dd4-4ecc-83a7-5b28300b703b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Departement</th>\n",
              "      <th>Amt</th>\n",
              "      <th>Debitor</th>\n",
              "      <th>DSTNr</th>\n",
              "      <th>Vetriebsweg</th>\n",
              "      <th>MWST</th>\n",
              "      <th>VTyp</th>\n",
              "      <th>VereinbarungNr</th>\n",
              "      <th>VertragsName</th>\n",
              "      <th>LeitungsKategorie</th>\n",
              "      <th>Marktleistungsgruppe</th>\n",
              "      <th>Marktleistung</th>\n",
              "      <th>MaterialNr</th>\n",
              "      <th>Material</th>\n",
              "      <th>PSPElement</th>\n",
              "      <th>MonthlyPrizePerUnit</th>\n",
              "      <th>UnitName</th>\n",
              "      <th>Periode</th>\n",
              "      <th>Amount</th>\n",
              "      <th>Verrechnungsbetrag</th>\n",
              "      <th>AbweichungMenge</th>\n",
              "      <th>AbweichungPreis</th>\n",
              "      <th>LineareHochrechnung</th>\n",
              "      <th>ExtrapolierteHochrechnung</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>BG</td>\n",
              "      <td>AB-BA</td>\n",
              "      <td>LVDR001117</td>\n",
              "      <td>109</td>\n",
              "      <td>KS</td>\n",
              "      <td>False</td>\n",
              "      <td>SLA</td>\n",
              "      <td>540000190</td>\n",
              "      <td>Applikationen betreiben BWL-SAP</td>\n",
              "      <td>Applikationen betreiben</td>\n",
              "      <td>Betriebswirtschaftliche Lösungen</td>\n",
              "      <td>BWL FI: Finanzwesen/Controlling</td>\n",
              "      <td>540003063</td>\n",
              "      <td>FIP Zähler: ML-User</td>\n",
              "      <td>KW01-00202.007.002</td>\n",
              "      <td>0.71</td>\n",
              "      <td>Stück</td>\n",
              "      <td>2021.01</td>\n",
              "      <td>30</td>\n",
              "      <td>21.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>255.6</td>\n",
              "      <td>255.6</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "  Departement    Amt  ... LineareHochrechnung  ExtrapolierteHochrechnung\n",
              "0          BG  AB-BA  ...               255.6                      255.6\n",
              "\n",
              "[1 rows x 24 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df2021 = df2021[['Marktleistung', 'Verrechnungsbetrag']]\n",
        "df2020 = df2020[['Marktleistung', 'Verrechnungsbetrag']]\n",
        "df2019 = df2019[['Marktleistung', 'Verrechnungsbetrag']]\n",
        "df2018 = df2018[['Marktleistung', 'Verrechnungsbetrag']]"
      ],
      "metadata": {
        "id": "1_WZpJ8EdBTE"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df2021['year'] = 2021\n",
        "df2020['year'] = 2020\n",
        "df2019['year'] = 2019\n",
        "df2018['year'] = 2018"
      ],
      "metadata": {
        "id": "973qX-LbeBo4"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df = pd.concat([df2018, df2019, df2020, df2021])"
      ],
      "metadata": {
        "id": "iFE2LAWzdH2D"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "pvr2VVVmdMx2",
        "outputId": "bf862740-0d0a-42c8-89bc-49c53f4dc5c3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Marktleistung</th>\n",
              "      <th>Verrechnungsbetrag</th>\n",
              "      <th>year</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>BWL FI: Finanzwesen/Controlling</td>\n",
              "      <td>21.3</td>\n",
              "      <td>2018</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>BWL FI: Finanzwesen/Controlling</td>\n",
              "      <td>2.13</td>\n",
              "      <td>2018</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>BWL FI: Finanzwesen/Controlling</td>\n",
              "      <td>100.33</td>\n",
              "      <td>2018</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>BWL FI: Finanzwesen/Controlling</td>\n",
              "      <td>21.3</td>\n",
              "      <td>2018</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>BWL FS: Fachsupport</td>\n",
              "      <td>1.05</td>\n",
              "      <td>2018</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>91750</th>\n",
              "      <td>IP LAN</td>\n",
              "      <td>48</td>\n",
              "      <td>2021</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>91751</th>\n",
              "      <td>IP LAN</td>\n",
              "      <td>3'072.00</td>\n",
              "      <td>2021</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>91752</th>\n",
              "      <td>IP WAN</td>\n",
              "      <td>5'400.00</td>\n",
              "      <td>2021</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>91753</th>\n",
              "      <td>IP WAN</td>\n",
              "      <td>12'500.00</td>\n",
              "      <td>2021</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>91754</th>\n",
              "      <td>WLAN-Service</td>\n",
              "      <td>1'012.00</td>\n",
              "      <td>2021</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>414570 rows × 3 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "                         Marktleistung Verrechnungsbetrag  year\n",
              "0      BWL FI: Finanzwesen/Controlling               21.3  2018\n",
              "1      BWL FI: Finanzwesen/Controlling               2.13  2018\n",
              "2      BWL FI: Finanzwesen/Controlling             100.33  2018\n",
              "3      BWL FI: Finanzwesen/Controlling               21.3  2018\n",
              "4                  BWL FS: Fachsupport               1.05  2018\n",
              "...                                ...                ...   ...\n",
              "91750                           IP LAN                 48  2021\n",
              "91751                           IP LAN           3'072.00  2021\n",
              "91752                           IP WAN           5'400.00  2021\n",
              "91753                           IP WAN          12'500.00  2021\n",
              "91754                     WLAN-Service           1'012.00  2021\n",
              "\n",
              "[414570 rows x 3 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 36
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df['Verrechnungsbetrag'] = df['Verrechnungsbetrag'].str.replace(r'\\D', '')\n",
        "df['Verrechnungsbetrag'] = df['Verrechnungsbetrag'].astype(float)"
      ],
      "metadata": {
        "id": "ZUNmfuEMdW2p"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "x3Jq0CrgdYan",
        "outputId": "98997aee-cc0d-44a9-af3d-e2ddee41bf8b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Int64Index: 414570 entries, 0 to 91754\n",
            "Data columns (total 3 columns):\n",
            " #   Column              Non-Null Count   Dtype  \n",
            "---  ------              --------------   -----  \n",
            " 0   Marktleistung       414570 non-null  object \n",
            " 1   Verrechnungsbetrag  301626 non-null  float64\n",
            " 2   year                414570 non-null  int64  \n",
            "dtypes: float64(1), int64(1), object(1)\n",
            "memory usage: 12.7+ MB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df['Verrechnungsbetrag'].plot(figsize=(30, 10))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 521
        },
        "id": "0-5MnBCxdZw3",
        "outputId": "2f206bfd-5823-47ba-8881-8ce377926ffe"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f36f9a56d50>"
            ]
          },
          "metadata": {},
          "execution_count": 39
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 2160x720 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df['year']['Verrechnungsbetrag'].plot(figsize=(10, 6))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 606
        },
        "id": "pY6g1ynueo7l",
        "outputId": "06ad20bc-c608-40c5-977e-67c615243ab0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "KeyError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mget_loc\u001b[0;34m(self, key, method, tolerance)\u001b[0m\n\u001b[1;32m   2897\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2898\u001b[0;31m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcasted_key\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2899\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32mpandas/_libs/index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;32mpandas/_libs/index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;32mpandas/_libs/index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine._get_loc_duplicates\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;32mpandas/_libs/index_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.index.Int64Engine._maybe_get_bool_indexer\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;32mpandas/_libs/index_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.index.Int64Engine._check_type\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;31mKeyError\u001b[0m: 'Verrechnungsbetrag'",
            "\nThe above exception was the direct cause of the following exception:\n",
            "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-40-47cf93a3e56d>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'year'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Verrechnungsbetrag'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfigsize\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m10\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m6\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/series.py\u001b[0m in \u001b[0;36m__getitem__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m    880\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    881\u001b[0m         \u001b[0;32melif\u001b[0m \u001b[0mkey_is_scalar\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 882\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_value\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    883\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    884\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mis_hashable\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/series.py\u001b[0m in \u001b[0;36m_get_value\u001b[0;34m(self, label, takeable)\u001b[0m\n\u001b[1;32m    988\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    989\u001b[0m         \u001b[0;31m# Similar to Index.get_value, but we do not fall back to positional\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 990\u001b[0;31m         \u001b[0mloc\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabel\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    991\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_values_for_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mloc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlabel\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    992\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mget_loc\u001b[0;34m(self, key, method, tolerance)\u001b[0m\n\u001b[1;32m   2898\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcasted_key\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2899\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2900\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2901\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2902\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mtolerance\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mKeyError\u001b[0m: 'Verrechnungsbetrag'"
          ]
        }
      ]
    }
  ]
}
